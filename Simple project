A simple  project in c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TASKS 100

struct Task {
    char description[100];
    int is_completed;
};

struct Task tasks[MAX_TASKS];
int taskCount = 0;

void addTask() {
    if (taskCount < MAX_TASKS) {
        struct Task newTask;
        printf("Enter task description: ");
        scanf(" %[^\n]", newTask.description);
        newTask.is_completed = 0;
        tasks[taskCount] = newTask;
        taskCount++;
        printf("Task added successfully!\n");
    } else {
        printf("Task list is full!\n");
    }
}

void viewTasks() {
    if (taskCount == 0) {
        printf("No tasks in the list.\n");
    } else {
        printf("Task List:\n");
        for (int i = 0; i < taskCount; i++) {
            printf("%d. %s [%s]\n", i + 1, tasks[i].description, tasks[i].is_completed ? "Completed" : "Not Completed");
        }
    }
}

void markTaskAsCompleted() {
    int taskNumber;
    viewTasks();
    printf("Enter the task number to mark as completed: ");
    scanf("%d", &taskNumber);
    if (taskNumber > 0 && taskNumber <= taskCount) {
        tasks[taskNumber - 1].is_completed = 1;
        printf("Task marked as completed.\n");
    } else {
        printf("Invalid task number.\n");
    }
}

void removeTask() {
    int taskNumber;
    viewTasks();
    printf("Enter the task number to remove: ");
    scanf("%d", &taskNumber);
    if (taskNumber > 0 && taskNumber <= taskCount) {
        for (int i = taskNumber - 1; i < taskCount - 1; i++) {
            tasks[i] = tasks[i + 1];
        }
        taskCount--;
        printf("Task removed.\n");
    } else {
        printf("Invalid task number.\n");
    }
}

int main() {
    int choice;
    do {
        printf("\nTo-Do List Manager\n");
        printf("1. Add Task\n");
        printf("2. View Tasks\n");
        printf("3. Mark Task as Completed\n");
        printf("4. Remove Task\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addTask();
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                markTaskAsCompleted();
                break;
            case 4:
                removeTask();
                break;
            case 5:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}
